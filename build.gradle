plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.diffplug.spotless' version '6.25.0'
}


spotless {
	java {
		target 'src/main/java/**/*.java', 'src/test/java/**/*.java'
		eclipse()
		indentWithSpaces(4)
		importOrder('java', 'javax', 'org', 'com', '')
		removeUnusedImports()
		endWithNewline()
		trimTrailingWhitespace()
	}
	groovyGradle {
		target '*.gradle'
		greclipse()
	}
}

group = 'team.themoment'
version = 'v20241011.0'

java {
	sourceCompatibility = '17'
}

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	/** spring app **/
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/** security **/
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	/** oauth 2.0 **/
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	/** persistence **/
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	runtimeOnly 'com.mysql:mysql-connector-j'

	/** queryDsl **/
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	/** test **/
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-inline:4.9.0'

	/** validation **/
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	/** lombok **/
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	/** aws **/
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.4.0'
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-sns:3.4.0'

	/** excel **/
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.4.1'

	/** jackson **/
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	/** swagger **/
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

	/** actuator **/
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	/** micrometer **/
	implementation 'io.micrometer:micrometer-registry-prometheus'

	/** logging **/
	implementation group: 'ca.pjer', name: 'logback-awslogs-appender', version: '1.6.0'

	/** open feign **/
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

def querydslSrcDir = "$projectDir/build/generated"

clean {
	delete file(querydslSrcDir)
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava.dependsOn spotlessApply
compileTestJava.dependsOn spotlessApply
